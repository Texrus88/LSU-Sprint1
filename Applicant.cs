using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LSU_App
{
    /// <summary>
    /// Represents an applicant to the LSU_App admissions system.
    /// This is the core data model for prospective students who have submitted applications.
    /// Contains identifying information, application timing, and current processing status.
    /// Used throughout the admissions workflow from initial submission to final decision.
    /// </summary>
    public class Applicant
    {
        /// <summary>
        /// Unique identifier for the applicant.
        /// Auto-generated by the AdmissionsService and used as the primary key for database storage.
        /// This ID is used to track the application through the entire admissions process and
        /// allows administrators to reference specific applications in decisions and communications.
        /// </summary>
        public int Id { get; set; }

        /// <summary>
        /// First name of the applicant.
        /// Captured during the application submission process and used for personalized communications,
        /// official documentation, and display in administrative interfaces.
        /// Defaults to empty string to prevent null reference exceptions during object initialization.
        /// </summary>
        public string FirstName { get; set; } = string.Empty;

        /// <summary>
        /// Last name of the applicant.
        /// Used for sorting applicant lists alphabetically, name-based searches, and official records.
        /// Critical for the ListByLastName functionality in AdmissionsService.
        /// Defaults to empty string to prevent null reference exceptions during object initialization.
        /// </summary>
        public string LastName { get; set; } = string.Empty;

        /// <summary>
        /// Date and time when the application was originally submitted.
        /// Used for chronological sorting, application deadlines enforcement, and audit trails.
        /// Important for determining processing order and meeting institutional reporting requirements.
        /// This timestamp is immutable once set during application submission.
        /// </summary>
        public DateTime ApplicationDate { get; set; }

        /// <summary>
        /// Current status of the application in the admissions process.
        /// Corresponds to the AppStatus enum values but stored as string for flexibility.
        /// Typical values: "Submitted", "Accepted", "Rejected"
        /// Updated by administrators through the AdmissionsService.Decide() method.
        /// Used for filtering applications by status and driving workflow logic.
        /// Defaults to empty string but should be set to "Submitted" during normal application flow.
        /// </summary>
        public string Status { get; set; } = string.Empty;

        /// <summary>
        /// Default parameterless constructor.
        /// Required for object-relational mapping (ORM) frameworks like Entity Framework,
        /// JSON serialization/deserialization for API endpoints, and other reflection-based operations.
        /// Creates an applicant with default values (empty strings, Id = 0, and DateTime.MinValue).
        /// In production use, prefer the parameterized constructor to ensure all required data is provided.
        /// </summary>
        public Applicant() { }

        /// <summary>
        /// Parameterized constructor for creating a fully-initialized Applicant object.
        /// Used by AdmissionsService.Submit() to create new applicant records with all required information.
        /// Ensures that all essential applicant data is provided at object creation time,
        /// reducing the risk of incomplete or invalid applicant records.
        /// </summary>
        /// <param name="id">Unique identifier assigned by the admissions system</param>
        /// <param name="firstName">Applicant's first name as provided in the application</param>
        /// <param name="lastName">Applicant's last name as provided in the application</param>
        /// <param name="applicationDate">Date and time when the application was submitted</param>
        /// <param name="status">Initial status of the application (typically "Submitted")</param>
        public Applicant(int id, string firstName, string lastName, DateTime applicationDate, string status)
        {
            // Initialize all properties with provided values
            Id = id;
            FirstName = firstName;
            LastName = lastName;
            ApplicationDate = applicationDate;
            Status = status;
        }

        /// <summary>
        /// Provides a human-readable string representation of the Applicant object.
        /// Used for debugging, logging, administrative displays, and anywhere a quick applicant summary is needed.
        /// Does not include the ApplicationDate to keep the output concise for common display scenarios.
        /// Format: "FirstName LastName (ID: #, Status: CurrentStatus)"
        /// </summary>
        /// <returns>Formatted string containing the applicant's key identifying information and current status</returns>
        /// <example>Returns: "Jane Doe (ID: 123, Status: Accepted)"</example>
        public override string ToString()
        {
            return $"{FirstName} {LastName} (ID: {Id}, Status: {Status})";
        }
    }
}
